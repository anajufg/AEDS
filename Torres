import java.util.Stack;

int n = 5;
int h = 40;
int torresPosY = 200;
int posX1 = 150;
int posX2 = 300;
int posX3 = 450;

Stack<Disco> torre1;

void setup() {
  size(600, 600);

  torre1 = iniciaTorre();
}

void draw() {
  background(#F7E3BB);
  noStroke();

  fill(#8E6A22);
  rect(150, 200, 10, 200);
  rect(300, 200, 10, 200);
  rect(450, 200, 10, 200);

  mostraTorre(torre1, posX1);
}

void mostraTorre(Stack<Disco> torre, int posX) {
  int i = 0;

  for (Disco disco : torre) {
    disco.posX = posX;
    disco.posY = 400-i;
    disco.show();

    i = i + 40;
  }
}

void selecionado(Stack<Disco> torre) {
  Disco ultimo = torre.peek();
  
  if ((mouseX >= ultimo.posX && mouseX <= ultimo.posX+ultimo.l) && (mouseY >= ultimo.posY && mouseY <= ultimo.posY+ultimo.h)) {
    if (mousePressed) torreselecionado = true;
  }
}

Stack<Disco> iniciaTorre() {
  Stack<Disco> torre = new Stack<Disco>();

  for (int i = 0; i < n; i++) {
    int l = (int)random(50, 200);

    Disco newDisco = new Disco(l, h, color(random(255), random(255), random(255)));

    torre.push(newDisco);
  }

  return torre;
}


class Disco {

  int l, h;
  int posX, posY;
  color cor;
  boolean selecionado;

  Disco (int l, int h, color cor) {
    this.l = l;
    this.h = h;
    this.cor = cor;
    selecionado = false;
  }

  void show() {
    fill(cor);
    ellipse(posX, posY, l, h);
  }
}
